pipeline{

agent any

parameters {
  choice choices: ['master', 'development', 'stage', 'uat'], description: 'Select the Branch Name', name: 'BranchName'
  string defaultValue: 'Mithun Software Solutions', name: 'PersonName'
}


tools{
maven 'maven3.9.3'
}

options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
  timestamps()
}


triggers {
  pollSCM('* * * * * ')
}


stages{
  stage('CheckoutCode'){
  steps{
      sendSlackNotifications('STARTED')
  git branch: "${params.BranchName}", credentialsId:'beb345d7-01ac-4844-bd78-aacdb9b11e27', url: 'https://github.com/ritu9729/maven-web-application.git'
      }
  }
  

stage('Build'){
steps{
sh "mvn clean package"
}
}

//Execute SonarQube Report
stage('ExecuteSonarQubeReport'){
steps{
sh "mvn clean sonar:sonar"
}
}

//UploadArtifactsIntoNexus
stage('ArtifactsIntoNexus'){
steps{
sh "mvn clean deploy"
}
}

//DeployApplication into TOmcat Server
stage('DeploApp'){
steps{
sshagent(['2d14bb14-8389-436b-909f-d490a648e7b1']) {
    sh "scp -o stricthostkeychecking=no /var/lib/jenkins/workspace/pipeline-scriptedway/target/maven-web-application.war ec2-user@172.31.35.100:/opt/apache-tomcat-9.0.76/webapps "
}
}
}
}//stages closing
post {
  success {
    sendSlackNotifications(currentBuild.result)
  }
  failure {
    sendSlackNotifications(currentBuild.result)
  }
}
}//pipeline closing

//Function for slack notifications
def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: '#citibank')
}
